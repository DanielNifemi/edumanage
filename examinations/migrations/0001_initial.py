# Generated by Django 5.0.7 on 2025-07-04 16:53

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('students', '0001_initial'),
        ('teachers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('essay', 'Essay'), ('matching', 'Matching'), ('fill_blank', 'Fill in the Blank')], max_length=20)),
                ('points', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('order', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_images/')),
                ('explanation', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=True)),
                ('time_limit_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['test', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('exam_type', models.CharField(choices=[('exam', 'Final Exam'), ('midterm', 'Midterm Exam'), ('test', 'Test/Quiz'), ('assignment', 'Assignment'), ('project', 'Project'), ('practical', 'Practical Exam')], default='test', max_length=20)),
                ('subject', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('max_marks', models.DecimalField(decimal_places=2, default=100.0, max_digits=6)),
                ('passing_marks', models.DecimalField(decimal_places=2, default=50.0, max_digits=6)),
                ('instructions', models.TextField(blank=True)),
                ('allow_late_submission', models.BooleanField(default=False)),
                ('late_penalty_percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('randomize_questions', models.BooleanField(default=False)),
                ('show_results_immediately', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='courses.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_exams', to='teachers.teacher')),
            ],
            options={
                'ordering': ['-date', '-start_time'],
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('grade_letter', models.CharField(blank=True, max_length=2)),
                ('is_graded', models.BooleanField(default=False)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('grade_comment', models.TextField(blank=True)),
                ('teacher_feedback', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('is_submitted', models.BooleanField(default=False)),
                ('is_late', models.BooleanField(default=False)),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='examinations.exam')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_exams', to='teachers.teacher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='students.student')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('exam', 'student')},
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='students',
            field=models.ManyToManyField(blank=True, through='examinations.ExamResult', to='students.student'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='answer_images/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='examinations.question')),
            ],
            options={
                'ordering': ['question', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('test_type', models.CharField(choices=[('quiz', 'Quiz'), ('test', 'Test'), ('practice', 'Practice Test'), ('assessment', 'Assessment')], default='test', max_length=20)),
                ('available_from', models.DateTimeField()),
                ('available_until', models.DateTimeField()),
                ('time_limit_minutes', models.PositiveIntegerField(help_text='Time limit in minutes')),
                ('max_attempts', models.PositiveIntegerField(default=1)),
                ('shuffle_questions', models.BooleanField(default=False)),
                ('shuffle_answers', models.BooleanField(default=False)),
                ('question_display', models.CharField(choices=[('all', 'All at Once'), ('one', 'One at a Time')], default='all', max_length=10)),
                ('show_correct_answers', models.BooleanField(default=False)),
                ('show_feedback', models.BooleanField(default=True)),
                ('total_points', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('passing_score', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='courses.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tests', to='teachers.teacher')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='examinations.test'),
        ),
        migrations.CreateModel(
            name='TestAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField()),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_graded', models.BooleanField(default=False)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('is_submitted', models.BooleanField(default=False)),
                ('is_completed', models.BooleanField(default=False)),
                ('attempt_number', models.PositiveIntegerField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='teachers.teacher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_attempts', to='students.student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='examinations.test')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('test', 'student', 'attempt_number')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('test', 'order')},
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True)),
                ('points_earned', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('teacher_feedback', models.TextField(blank=True)),
                ('is_graded', models.BooleanField(default=False)),
                ('time_spent_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('answered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='examinations.question')),
                ('selected_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='examinations.answer')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='examinations.testattempt')),
            ],
            options={
                'unique_together': {('attempt', 'question')},
            },
        ),
    ]
